{
  "resourceType": "Library",
  "id": "HighRiskExclusionsActions",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.11.0"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "format",
      "valueString": "JSON"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": true
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": true
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Error"
    }, {
      "name": "signatureLevel",
      "valueString": "Overloads"
    }, {
      "name": "validateUnits",
      "valueBoolean": false
    }, {
      "name": "verifyOnly",
      "valueBoolean": true
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://cancerscreeningcds.github.io/bcsm-cds/Library/HighRiskExclusionsActions",
  "version": "1.0.0",
  "name": "HighRiskExclusionsActions",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library DataElements",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/DataElements|1.0.0"
  }, {
    "type": "depends-on",
    "display": "Library BCSMCommonFunctions",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/BCSMCommonFunctions|1.0.0"
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/CSMCommonFunctions|1.0.0"
  }, {
    "type": "depends-on",
    "display": "Code system ActCode",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/plan-definition-action-code-system"
  }, {
    "type": "depends-on",
    "display": "Code system ReasonCode",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/plan-definition-action-reason-code-system"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system CONDVERSTATUS",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-ver-status"
  }, {
    "type": "depends-on",
    "display": "Code system SNOMED-CT",
    "resource": "http://snomed.info/sct"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "act-othergeneticrisk",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-acshighriskmammo",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-acshighriskmri",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-acsgeneticriskmammo",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-acsgeneticriskmri",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "RadiationTherapyCompletionAge",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Age"
  }, {
    "name": "Age8yafterRT",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Quantity"
  }, {
    "name": "Ageatleast25and8yafterRT",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "decimal"
  }, {
    "name": "act-acsmammoafterRT",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-acsmriafterRT",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-acsmammoafterbrca",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-hxbreastcawithin5y",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-acsmammoatypicalbx",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-acsmriatypicalbx",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "verificationStatus", "onset", "onset.value", "onset.code", "abatement", "abatement.value", "abatement.code" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "77941000119104",
        "display": "History of radiation therapy to chest"
      } ]
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBIaWdoUmlza0V4Y2x1c2lvbnNBY3Rpb25zIHZlcnNpb24gJzEuMC4wJwoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgRkhJUkhlbHBlcnMgIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMKaW5jbHVkZSBEYXRhRWxlbWVudHMgdmVyc2lvbiAnMS4wLjAnIGNhbGxlZCBEYXRhRWxlbWVudHMKaW5jbHVkZSBCQ1NNQ29tbW9uRnVuY3Rpb25zIHZlcnNpb24gJzEuMC4wJyBjYWxsZWQgQkNTTUNvbW1vbkZ1bmN0aW9ucwoKY29kZXN5c3RlbSAiQWN0Q29kZSI6ICdodHRwOi8vY2FuY2Vyc2NyZWVuaW5nY2RzLmdpdGh1Yi5pby9iY3NtLWNkcy9Db2RlU3lzdGVtL3BsYW4tZGVmaW5pdGlvbi1hY3Rpb24tY29kZS1zeXN0ZW0nCmNvZGVzeXN0ZW0gIlJlYXNvbkNvZGUiOiAnaHR0cDovL2NhbmNlcnNjcmVlbmluZ2Nkcy5naXRodWIuaW8vYmNzbS1jZHMvQ29kZVN5c3RlbS9wbGFuLWRlZmluaXRpb24tYWN0aW9uLXJlYXNvbi1jb2RlLXN5c3RlbScKY29kZXN5c3RlbSAiTE9JTkMiOiAnaHR0cDovL2xvaW5jLm9yZycKCi8vIEFjdCBDb2Rlcwpjb2RlICJSZWZlciB0byBzcGVjaWFsaXN0IHJlY29tbWVuZGF0aW9ucyI6ICdzcGVjaWFsdHlyZWZlcnJhbCcgZnJvbSAiQWN0Q29kZSIgZGlzcGxheSAnUmVmZXIgdG8gc3BlY2lhbGlzdCByZWNvbW1lbmRhdGlvbnMnCi8vIFJlYXNvbiBDb2Rlcwpjb2RlICJPdGhlciBnZW5ldGljIG1hcmtlciBvciBzeW5kcm9tZSBhc3NvY2lhdGVkIHdpdGggYnJlYXN0IGNhbmNlciI6ICdvdGhlcmdlbmV0aWNyaXNrJyBmcm9tICJSZWFzb25Db2RlIiBkaXNwbGF5ICdPdGhlciBnZW5ldGljIG1hcmtlciBvciBzeW5kcm9tZSBhc3NvY2lhdGVkIHdpdGggYnJlYXN0IGNhbmNlcicKY29kZSAiR2VuZXRpYyByaXNrIGV4Y2x1c2lvbiI6ICdnZW5ldGljcmlza2V4Y2x1c2lvbicgZnJvbSAiUmVhc29uQ29kZSIgZGlzcGxheSAnR2VuZXRpYyByaXNrIGV4Y2x1c2lvbicKY29kZSAiSGlzdG9yeSBvZiBjaGVzdCByYWRpYXRpb24gYWdlcyAxMC0zMCB5IjogJ2NoZXN0eHJ0JyBmcm9tICJSZWFzb25Db2RlIiBkaXNwbGF5ICdIaXN0b3J5IG9mIGNoZXN0IHJhZGlhdGlvbiBhZ2VzIDEwLTMwIHknCmNvZGUgIlByZXZpb3VzIGJyZWFzdCBjYW5jZXIiOiAnaHhicmVhc3RjYScgZnJvbSAiUmVhc29uQ29kZSIgZGlzcGxheSAnUHJldmlvdXMgYnJlYXN0IGNhbmNlcicKY29kZSAiQnJlYXN0IGNhbmNlciBpbiByZW1pc3Npb24gPCA1IHllYXJzIjogJ2h4YnJlYXN0Y2F3aXRoaW41eScgZnJvbSAiUmVhc29uQ29kZSIgZGlzcGxheSAnQnJlYXN0IGNhbmNlciBpbiByZW1pc3Npb24gPCA1IHllYXJzJwpjb2RlICJBdHlwaWNhbCBiaW9wc3kgaGlnaCBsaWZldGltZSByaXNrIjogJ2F0eXBpY2FsYnhoaWdobGlmZXRpbWVyaXNrJyBmcm9tICJSZWFzb25Db2RlIiBkaXNwbGF5ICdBdHlwaWNhbCBiaW9wc3kgaGlnaCBsaWZldGltZSByaXNrJwoKLy8gU3RhbmRhcmQgY29kZXMKY29kZSAiTUcgQnJlYXN0IFNjcmVlbmluZyI6ICcyNDYwNi02JyBmcm9tICJMT0lOQyIgZGlzcGxheSAnTUcgQnJlYXN0IFNjcmVlbmluZycgCmNvZGUgIk1SIEJyZWFzdCI6ICczMDc5NC0yJyBmcm9tICJMT0lOQyIgZGlzcGxheSAnTVIgQnJlYXN0JyAKCmNvbnRleHQgUGF0aWVudAoKZGVmaW5lICJhY3Qtb3RoZXJnZW5ldGljcmlzayI6CiAgewoJCWNvZGU6ICJSZWZlciB0byBzcGVjaWFsaXN0IHJlY29tbWVuZGF0aW9ucyIsCiAgICByZWFzb246ICJPdGhlciBnZW5ldGljIG1hcmtlciBvciBzeW5kcm9tZSBhc3NvY2lhdGVkIHdpdGggYnJlYXN0IGNhbmNlciIKCX0gIAoKZGVmaW5lICJhY3QtYWNzaGlnaHJpc2ttYW1tbyI6CiAgewoJCWNvZGU6ICJNRyBCcmVhc3QgU2NyZWVuaW5nIiwKICAgIHRpbWluZ1RpbWluZzogewogICAgICBldmVudDoge1RvU3RyaW5nKEAyMDI1LTAxLTI1KX0sIC8vVE9ETzogcGxhY2Vob2xkZXIgZm9yIHRlc3RpbmcgbmV4dGR1ZWRhdGUKICAgICAgcmVwZWF0OiB7CiAgICAgICAgZnJlcXVlbmN5OiAxLAogICAgICAgIHBlcmlvZDogMSwKICAgICAgICBwZXJpb2RVbml0OiAnYScKICAgICAgfQogICAgfQoJfSAKCmRlZmluZSAiYWN0LWFjc2hpZ2hyaXNrbXJpIjoKICB7CgkJY29kZTogIk1SIEJyZWFzdCIsCiAgICB0aW1pbmdUaW1pbmc6IHsKICAgICAgZXZlbnQ6IHtUb1N0cmluZyhAMjAyNS0wMS0yNSl9LCAvL1RPRE86IHBsYWNlaG9sZGVyIGZvciB0ZXN0aW5nIG5leHRkdWVkYXRlCiAgICAgIHJlcGVhdDogewogICAgICAgIGZyZXF1ZW5jeTogMSwKICAgICAgICBwZXJpb2Q6IDEsCiAgICAgICAgcGVyaW9kVW5pdDogJ2EnCiAgICAgIH0KICAgIH0KCX0gCgpkZWZpbmUgImFjdC1hY3NnZW5ldGljcmlza21hbW1vIjoKICBCQ1NNQ29tbW9uRnVuY3Rpb25zLlNldFJlY29tbWVuZGF0aW9uUmVhc29uVGltaW5nQWdlKCJhY3QtYWNzaGlnaHJpc2ttYW1tbyIsICJHZW5ldGljIHJpc2sgZXhjbHVzaW9uIiwge3ZhbHVlOiAzMC4wLCBjb2RlOiAnYSd9KSAgCgpkZWZpbmUgImFjdC1hY3NnZW5ldGljcmlza21yaSI6CiAgQkNTTUNvbW1vbkZ1bmN0aW9ucy5TZXRSZWNvbW1lbmRhdGlvblJlYXNvblRpbWluZ0FnZSgiYWN0LWFjc2hpZ2hyaXNrbXJpIiwgIkdlbmV0aWMgcmlzayBleGNsdXNpb24iLCB7dmFsdWU6IDMwLjAsIGNvZGU6ICdhJ30pICAKCmRlZmluZSAiYWN0LWFjc21hbW1vYWZ0ZXJSVCI6CiAgQkNTTUNvbW1vbkZ1bmN0aW9ucy5TZXRSZWNvbW1lbmRhdGlvblJlYXNvblRpbWluZ0FnZSgiYWN0LWFjc2hpZ2hyaXNrbWFtbW8iLCAiSGlzdG9yeSBvZiBjaGVzdCByYWRpYXRpb24gYWdlcyAxMC0zMCB5Iiwge3ZhbHVlOiBBZ2VhdGxlYXN0MjVhbmQ4eWFmdGVyUlQsIGNvZGU6ICdhJ30pCgpkZWZpbmUgImFjdC1hY3NtcmlhZnRlclJUIjoKICBCQ1NNQ29tbW9uRnVuY3Rpb25zLlNldFJlY29tbWVuZGF0aW9uUmVhc29uVGltaW5nQWdlKCJhY3QtYWNzaGlnaHJpc2ttcmkiLCAiSGlzdG9yeSBvZiBjaGVzdCByYWRpYXRpb24gYWdlcyAxMC0zMCB5Iiwge3ZhbHVlOiBBZ2VhdGxlYXN0MjVhbmQ4eWFmdGVyUlQsIGNvZGU6ICdhJ30pICAKCmRlZmluZSAiYWN0LWFjc21hbW1vYWZ0ZXJicmNhIjoKICBCQ1NNQ29tbW9uRnVuY3Rpb25zLlNldFJlY29tbWVuZGF0aW9uUmVhc29uVGltaW5nQWdlKCJhY3QtYWNzaGlnaHJpc2ttYW1tbyIsICJQcmV2aW91cyBicmVhc3QgY2FuY2VyIiwge3ZhbHVlOiBBZ2VJblllYXJzKCkgKiAxLjAsIGNvZGU6ICdhJ30pCgpkZWZpbmUgImFjdC1oeGJyZWFzdGNhd2l0aGluNXkiOgogIHsKCQljb2RlOiAiUmVmZXIgdG8gc3BlY2lhbGlzdCByZWNvbW1lbmRhdGlvbnMiLAogICAgcmVhc29uOiAiQnJlYXN0IGNhbmNlciBpbiByZW1pc3Npb24gPCA1IHllYXJzIgoJfQoKZGVmaW5lICJhY3QtYWNzbWFtbW9hdHlwaWNhbGJ4IjoKICBCQ1NNQ29tbW9uRnVuY3Rpb25zLlNldFJlY29tbWVuZGF0aW9uUmVhc29uVGltaW5nQWdlKCJhY3QtYWNzaGlnaHJpc2ttYW1tbyIsICJBdHlwaWNhbCBiaW9wc3kgaGlnaCBsaWZldGltZSByaXNrIiwge3ZhbHVlOiBBZ2VJblllYXJzKCkgKiAxLjAsIGNvZGU6ICdhJ30pICAKCmRlZmluZSAiYWN0LWFjc21yaWF0eXBpY2FsYngiOgogIEJDU01Db21tb25GdW5jdGlvbnMuU2V0UmVjb21tZW5kYXRpb25SZWFzb25UaW1pbmdBZ2UoImFjdC1hY3NoaWdocmlza21yaSIsICJBdHlwaWNhbCBiaW9wc3kgaGlnaCBsaWZldGltZSByaXNrIiwge3ZhbHVlOiBBZ2VJblllYXJzKCkgKiAxLjAsIGNvZGU6ICdhJ30pICAKCmRlZmluZSAiUmFkaWF0aW9uVGhlcmFweUNvbXBsZXRpb25BZ2UiOgogIEZpcnN0KERhdGFFbGVtZW50cy4iZGUtY2hlc3R4cnRhZ2UxMHRvMzAiIEMpLmFiYXRlbWVudCBhcyBBZ2UgLy9UT0RPOiBzdXBwb3J0IGZvciBvdGhlciBjaG9pY2UgdHlwZXMgKGRhdGVUaW1lLCBQZXJpb2QsIGV0YykKICAvLyBub3RlIHRoZXNlIGNhbid0IGJlIHNvcnRlZCBieSBhYmF0ZW1lbnQgZHVlIHRvIGNob2ljZSB0eXBlcwoKLy9UT0RPOiBoYW5kbGluZyBmb3IgdW5hdmFpbGFibGUgZGF0ZXMKZGVmaW5lIEFnZWF0bGVhc3QyNWFuZDh5YWZ0ZXJSVDoKICBpZiAyNSB5ZWFycyA8IEFnZTh5YWZ0ZXJSVCB0aGVuCiAgICBBZ2U4eWFmdGVyUlQudmFsdWUKICBlbHNlCiAgICAyNSAgCgpkZWZpbmUgQWdlOHlhZnRlclJUOiAgICAKICAiUmFkaWF0aW9uVGhlcmFweUNvbXBsZXRpb25BZ2UiICsgOCB5ZWFycw=="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}