{
  "resourceType": "Library",
  "id": "DecisionToScreenActions",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.11.0"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "format",
      "valueString": "JSON"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": true
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": true
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Error"
    }, {
      "name": "signatureLevel",
      "valueString": "Overloads"
    }, {
      "name": "validateUnits",
      "valueBoolean": false
    }, {
      "name": "verifyOnly",
      "valueBoolean": true
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://cancerscreeningcds.github.io/bcsm-cds/Library/DecisionToScreenActions",
  "version": "1.0.0",
  "name": "DecisionToScreenActions",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library HighRiskExclusions",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/HighRiskExclusions|1.0.0"
  }, {
    "type": "depends-on",
    "display": "Library SpecialPopulations",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/SpecialPopulations|1.0.0"
  }, {
    "type": "depends-on",
    "display": "Library AverageRisk",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/AverageRisk|1.0.0"
  }, {
    "type": "depends-on",
    "display": "Library BCSMCommonFunctions",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/Library/BCSMCommonFunctions|1.0.0"
  }, {
    "type": "depends-on",
    "display": "Code system ActCode",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/plan-definition-action-code-system"
  }, {
    "type": "depends-on",
    "display": "Code system ReasonCode",
    "resource": "http://cancerscreeningcds.github.io/bcsm-cds/CodeSystem/plan-definition-action-reason-code-system"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "act-sdmcontinueage",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-sdmcontinuelifexp",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-lactating",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "act-highriskexclusions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "act-specialpop",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "act-avgrisk",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBEZWNpc2lvblRvU2NyZWVuQWN0aW9ucyB2ZXJzaW9uICcxLjAuMCcKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzICB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzCmluY2x1ZGUgSGlnaFJpc2tFeGNsdXNpb25zIHZlcnNpb24gJzEuMC4wJwppbmNsdWRlIFNwZWNpYWxQb3B1bGF0aW9ucyB2ZXJzaW9uICcxLjAuMCcKaW5jbHVkZSBBdmVyYWdlUmlzayB2ZXJzaW9uICcxLjAuMCcKaW5jbHVkZSBCQ1NNQ29tbW9uRnVuY3Rpb25zIHZlcnNpb24gJzEuMC4wJwoKY29kZXN5c3RlbSAiQWN0Q29kZSI6ICdodHRwOi8vY2FuY2Vyc2NyZWVuaW5nY2RzLmdpdGh1Yi5pby9iY3NtLWNkcy9Db2RlU3lzdGVtL3BsYW4tZGVmaW5pdGlvbi1hY3Rpb24tY29kZS1zeXN0ZW0nCmNvZGVzeXN0ZW0gIlJlYXNvbkNvZGUiOiAnaHR0cDovL2NhbmNlcnNjcmVlbmluZ2Nkcy5naXRodWIuaW8vYmNzbS1jZHMvQ29kZVN5c3RlbS9wbGFuLWRlZmluaXRpb24tYWN0aW9uLXJlYXNvbi1jb2RlLXN5c3RlbScKCi8vIEFjdCBDb2Rlcwpjb2RlICJTY3JlZW5pbmcgTmV4dCBEdWUiOiAnc2NyZWVuaW5nbmV4dGR1ZScgZnJvbSAiQWN0Q29kZSIgZGlzcGxheSAnU2NyZWVuaW5nIE5leHQgRHVlJwpjb2RlICJEaXNjdXNzIGRlY2lzaW9uIHRvIGNvbnRpbnVlIHNjcmVlbmluZyI6ICdzZG1jb250aW51ZScgZnJvbSAiQWN0Q29kZSIgZGlzcGxheSAnU2hhcmVkIGRlY2lzaW9uIG1ha2luZyB0byBjb250aW51ZSBzY3JlZW5pbmcnCmNvZGUgIkRpc2N1c3MgZGVsYXkgaW4gc2NyZWVuaW5nIjogJ3NkbWRlbGF5JyBmcm9tICJBY3RDb2RlIiBkaXNwbGF5ICdTaGFyZWQgZGVjaXNpb24gbWFraW5nIHRvIGNvbnNpZGVyIGRlbGF5IGluIHNjcmVlbmluZycKLy8gUmVhc29uIENvZGVzCmNvZGUgIkFnZSBvdmVyIDc0IHllYXJzIjogJ2FnZW92ZXI3NCcgZnJvbSAiUmVhc29uQ29kZSIgZGlzcGxheSAnQWdlIG92ZXIgNzQgeWVhcnMnCmNvZGUgIlJlZHVjZWQgbGlmZSBleHBlY3RhbmN5IGluZGljYXRvciI6ICdsaWZlZXhwJyBmcm9tICJSZWFzb25Db2RlIiBkaXNwbGF5ICdSZWR1Y2VkIGxpZmUgZXhwZWN0YW5jeSBpbmRpY2F0b3InCmNvZGUgIkN1cnJlbnRseSBsYWN0YXRpbmciOiAnY3VycmVudGx5bGFjdGF0aW5nJyBmcm9tICJSZWFzb25Db2RlIiBkaXNwbGF5ICdDdXJyZW50bHkgbGFjdGF0aW5nJwpjb2RlICJVU1BTVEYgYXZlcmFnZSByaXNrIjogJ1VTUFNURmF2ZXJhZ2VyaXNrJyBmcm9tICJSZWFzb25Db2RlIiBkaXNwbGF5ICdVU1BTVEYgYXZlcmFnZSByaXNrJwoKY29udGV4dCBQYXRpZW50CgpkZWZpbmUgImFjdC1zZG1jb250aW51ZWFnZSI6CiAgewoJCWNvZGU6ICJEaXNjdXNzIGRlY2lzaW9uIHRvIGNvbnRpbnVlIHNjcmVlbmluZyIsCiAgICByZWFzb246ICJBZ2Ugb3ZlciA3NCB5ZWFycyIsCiAgICBkb2N1bWVudGF0aW9uOiBCQ1NNQ29tbW9uRnVuY3Rpb25zLlNvdXJjZURvY3VtZW50YXRpb25VU1BTVEYKCX0gIAoKZGVmaW5lICJhY3Qtc2RtY29udGludWVsaWZleHAiOgogIHsKCQljb2RlOiAiRGlzY3VzcyBkZWNpc2lvbiB0byBjb250aW51ZSBzY3JlZW5pbmciLAogICAgcmVhc29uOiAiUmVkdWNlZCBsaWZlIGV4cGVjdGFuY3kgaW5kaWNhdG9yIiwKICAgIGRvY3VtZW50YXRpb246IEJDU01Db21tb25GdW5jdGlvbnMuU291cmNlRG9jdW1lbnRhdGlvbkFDUwoJfSAKCmRlZmluZSAiYWN0LWxhY3RhdGluZyI6CiAgewoJCWNvZGU6ICJEaXNjdXNzIGRlbGF5IGluIHNjcmVlbmluZyIsCiAgICByZWFzb246ICJDdXJyZW50bHkgbGFjdGF0aW5nIiwKICAgIGRvY3VtZW50YXRpb246IEJDU01Db21tb25GdW5jdGlvbnMuU291cmNlRG9jdW1lbnRhdGlvbk90aGVyCgl9IAoKZGVmaW5lICJhY3QtaGlnaHJpc2tleGNsdXNpb25zIjogIAogIEhpZ2hSaXNrRXhjbHVzaW9ucy4iZmxvdy1IaWdoUmlza0V4Y2x1c2lvbnMiCgpkZWZpbmUgImFjdC1zcGVjaWFscG9wIjoKICBpZiBleGlzdHMgImFjdC1oaWdocmlza2V4Y2x1c2lvbnMiCiAgdGhlbiBTcGVjaWFsUG9wdWxhdGlvbnMuImZsb3ctU3BlY2lhbFBvcHVsYXRpb25zIiBSIHdoZXJlIChSLnJlYXNvbiB+ICJVU1BTVEYgYXZlcmFnZSByaXNrIikgaXMgZmFsc2UKICBlbHNlIFNwZWNpYWxQb3B1bGF0aW9ucy4iZmxvdy1TcGVjaWFsUG9wdWxhdGlvbnMiCgpkZWZpbmUgImFjdC1hdmdyaXNrIjogIAogIGlmIG5vdCBleGlzdHMgImFjdC1oaWdocmlza2V4Y2x1c2lvbnMiIGFuZCBub3QgZXhpc3RzICJhY3Qtc3BlY2lhbHBvcCIKICB0aGVuIEF2ZXJhZ2VSaXNrLiJmbG93LUF2ZXJhZ2VSaXNrIiAKICBlbHNlIG51bGwgIAoK"
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}